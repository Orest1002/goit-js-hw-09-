{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAKpC,SAASC,EAAcC,EAAUC,GAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC5BC,YAAW,KAEaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAG1BA,EAAM,G,CAbXL,EAAKY,iBAAiB,UAmBtB,SAAyBC,GACvBA,EAAIC,iBACJ,IAAIC,EAAQC,OAAOhB,EAAKK,MAAMY,OAC9B,IAAK,IAAIC,EAAE,EAAGA,GAAKlB,EAAKmB,OAAOF,MAAOC,GAAK,EACzCf,EAAce,EAAGH,GAElBK,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAuB,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAU,IAEhEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAuB,OAAOG,QAAQ,sBAAoBpB,QAAeC,MAAU,IAE9DU,GAASC,OAAOhB,EAAKyB,KAAKR,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from 'notiflix';\n\nconst form = document.querySelector('.form');\n\n\nform.addEventListener('submit', onCreatePromise );\n\nfunction createPromise(position, delay) {\n return new Promise((resolve, reject) => {\n  setTimeout(() => {\n    \n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n\n  }, delay);\n\n });\n \n};\n\nfunction onCreatePromise(evt){\n  evt.preventDefault();\n  let delay = Number(form.delay.value);\n  for( let i=1; i <= form.amount.value; i += 1 ){\n    createPromise(i, delay)\n\n  .then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delay += Number(form.step.value);\n  }\n\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","delay1","Number","value","i","amount","then","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.69d4b515.js.map"}